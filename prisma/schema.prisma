// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//USER
model User {
  id           String    @id @unique @default(uuid())
  name         String
  email        String    @unique
  isBlocked    Boolean   @default(false)
  passwordHash String
  lastAccess   DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  UserPermissions UserPermissions[]
  UserCompanies   UserCompanies[]

  @@map("users")
}

model UserPermissions {
  id           String   @id @unique @default(uuid())
  userId       String
  permissionId String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  User       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  Permission Permission @relation(fields: [permissionId], references: [id])

  @@map("userPermissions")
}

model UserCompanies {
  id        String  @id @unique @default(uuid())
  userId    String
  companyId String
  owner     Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User        User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  UserCompany Company @relation(fields: [companyId], references: [id], onDelete: Cascade)

  @@map("userCompanies")
}

model Permission {
  id        String   @id @unique @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Permissions UserPermissions[]

  @@map("permissions")
}

//COMPANY

model Company {
  id            String  @id @unique @default(uuid())
  name          String
  CNPJ          String? @unique
  CPF           String? @unique
  contactNumber String
  image         String
  isBlocked     Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  UserCompanies UserCompanies[]

  @@map("companies")
}

//CATEGORIES / MAINTENANCES

model Category {
  id        String  @id @unique @default(uuid())
  name      String
  isDeleted Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Maintenances Maintenance[]

  @@map("categories")
}

model Maintenance {
  id         String @id @unique @default(uuid())
  categoryId String
  element    String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Category            Category             @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  MaintenancesHistory MaintenanceHistory[]

  @@map("maintenances")
}

model MaintenanceHistory {
  id                      String  @id @unique @default(uuid())
  maintenanceId           String
  element                 String
  activity                String
  frequency               Int
  frequencyTimeIntervalId String
  responsible             String
  source                  String
  period                  Int
  periodTimeIntervalId    String
  delay                   Int
  delayTimeIntervalId     String
  observation             String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  FrequencyTimeInterval TimeInterval @relation(name: "MaintenanceHistoryFrequency", fields: [frequencyTimeIntervalId], references: [id])
  PeriodTimeInterval    TimeInterval @relation(name: "MaintenanceHistoryPeriod", fields: [periodTimeIntervalId], references: [id])
  DelayTimeInterval     TimeInterval @relation(name: "MaintenanceHistoryDelay", fields: [delayTimeIntervalId], references: [id])

  Maintenance Maintenance? @relation(fields: [maintenanceId], references: [id], onDelete: Cascade)

  @@map("maintenancesHistory")
}

model TimeInterval {
  id            String @id @unique @default(uuid())
  name          String @unique
  singularLabel String @unique
  pluralLabel   String @unique
  unitTime      Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  MaintenanceHistoryFrequency MaintenanceHistory[] @relation("MaintenanceHistoryFrequency")
  MaintenanceHistoryPeriod    MaintenanceHistory[] @relation("MaintenanceHistoryPeriod")
  MaintenanceHistoryDelay     MaintenanceHistory[] @relation("MaintenanceHistoryDelay")

  @@map("timeIntervals")
}
